{% extends '@WebProfiler/Collector/translation.html.twig' %}

{#
# Author Damien Alexandre (damienalexandre)
#}

{% import _self as translator %}
{% block panelContent %}
    <h2>Translation Stats</h2>
    <table>
        <tbody>
        <tr>
            <th>Defined messages</th>
            <td><pre>{{ collector.countdefines }}</pre></td>
        </tr>
        <tr>
            <th scope="col" style="width: 30%">Fallback messages</th>
            <td scope="col" style="width: 60%"><pre>{{ collector.countFallbacks }}</pre></td>
        </tr>
        <tr>
            <th>Missing messages</th>
            <td><pre>{{ collector.countMissings }}</pre></td>
        </tr>
        </tbody>
    </table>

<form action="{{ path('_profiler_save_translations', {'token': token}) }}" method="post"
      id="translations-list" onSubmit="return saveTranslations(this);" >

    <table>
        <tr>
            <th></th>
            <th>State</th>
            <th>Locale</th>
            <th>Domain</th>
            <th>Id</th>
            <th>Message Preview</th>
        </tr>
        {% for key, message in collector.messages %}
            <tr>
                <td>
                    {% if message.state == constant('Symfony\\Component\\Translation\\DataCollectorTranslator::MESSAGE_MISSING') %}
                        <input type="checkbox" name="translationKey" value="{{ key }}" checked="checked">
                    {% else %}
                        <input type="checkbox" disabled>
                    {% endif %}
                </td>
                <td><code>{{ translator.state(message) }}</code></td>
                <td><code>{{ message.locale }}</code></td>
                <td><code>{{ message.domain }}</code></td>
                <td>
                    <code>{{ message.id }}</code>
                    {% if message.count > 1 %}<br><small style="color: gray;">(used {{ message.count }} times)</small>{% endif %}
                </td>
                <td><code>{{ message.translation }}</code></td>
            </tr>
        {% endfor %}
    </table>

    <div id="translationResult">

    </div>
    <button type="submit" class="sf-button">
            <span class="border-l">
                <span class="border-r">
                    <span class="btn-bg">Send selected translations to Loco</span>
                </span>
            </span>
    </button>

</form>

    <script type="text/javascript">
        function openParameters(link) {
            "use strict";

            var imgs = link.children,
                    target = link.getAttribute('data-target-id');

            Sfjs.toggle(target, imgs[0], imgs[1]);
        };

        var serializeQueryString = function(obj, prefix) {
            var str = [];
            for(var p in obj) {
                if (obj.hasOwnProperty(p)) {
                    var k = prefix ? prefix + "[" + p + "]" : p, v = obj[p];
                    str.push(typeof v == "object" ? serializeQueryString(v, k) : encodeURIComponent(k) + "=" + encodeURIComponent(v));
                }
            }
            return str.join("&");
        };

        // We need to hack a bit Sfjs.request because it does not support POST requests
        // May not work for ActiveXObject('Microsoft.XMLHTTP'); :(
        (function(open) {
            XMLHttpRequest.prototype.open = function(method, url, async, user, pass) {
                open.call(this, method, url, async, user, pass);
                if (method.toLowerCase() === 'post') {
                    this.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                }
            };
        })(XMLHttpRequest.prototype.open);

        var saveTranslations = function(form) {
            "use strict";
            if (typeof(form.translationKey) === 'undefined') {
                return false;
            }
            var inputs = form.translationKey;
            var selected = [];
            if (!inputs.value) {
                for (var val in inputs) {
                    if (inputs.hasOwnProperty(val) && inputs[val].value) {
                        if (inputs[val].checked) {
                            selected.push(inputs[val].value);
                        }
                    }
                }
            } else if (inputs.checked) {
                selected.push(inputs.value);
            }
            Sfjs.request(
                    form.action,
                    function(xhr) {
                        // Success
                        document.getElementById('translationResult').innerHTML = xhr.responseText;
                    },
                    function(xhr) {
                        // Error
                        document.getElementById('translationResult').innerHTML = xhr.responseText;
                    },
                    serializeQueryString({selected: selected}),
                    { method: 'POST' }
            );
            return false;
        };
    </script>
{% endblock %}
